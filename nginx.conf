env API_URL;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $request_method $request_uri [$time_local] $status';
    access_log /dev/stdout main;
    error_log /dev/stdout;

    server {
        listen 80;
        server_name localhost;

        resolver 8.8.8.8 8.8.4.4 ipv6=off;

        location / {
            default_type 'text/plain';
            content_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()

                -- Get API URL from environment variable
                local api_url = os.getenv("API_URL")
                if not api_url then
                    ngx.log(ngx.ERR, "API_URL environment variable is not set")
                    ngx.exit(500)
                end

                -- Get incoming cookies (if any)
                local cookies = ngx.var.http_cookie or "No Cookies"

                -- Create JSON body
                local client_ip = ngx.var.http_x_forwarded_for or ngx.var.remote_addr

                local body_data = string.format('{"message":"Hello World page requested", "client_ip":"%s", "cookies":"%s"}', 
                    client_ip, ngx.var.http_cookie or "No Cookies")

                -- Send request to API
                local res, err = httpc:request_uri(api_url, {
                    method = "POST",
                    body = body_data,
                    headers = {
                        ["Content-Type"] = "application/json"
                    },
                    ssl_verify = false  -- <- Disable SSL verification
                })

                -- Handle API response error
                if not res then
                    ngx.log(ngx.ERR, "Failed to send API notification: ", err)
                end

                -- Return Hello World to the user
                ngx.say("Hello World from NGINX!")
            }
        }
    }
}
